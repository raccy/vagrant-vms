require_relative '../common'

Vagrant.configure('2') do |config|
  config.vm.box = 'generic/ubuntu2204'

  config.vm.box_check_update = true

  hostname = File.basename(File.absolute_path(__dir__)).gsub('_', '-')
  ssh_port = calc_port(hostname)

  config.vm.hostname = hostname

  config.vm.network 'forwarded_port', guest: 22, host: ssh_port, host_ip: '127.0.0.1', id: 'ssh'

  config.vm.synced_folder '.', '/vagrant', disabled: true
  # config.vm.synced_folder '.', '/vagrant', type: 'rsync'

  config.vm.provider 'virtualbox' do |vb|
    vb.cpus = 2
    vb.memory = 4096
  end

  config.vm.provider 'hyperv' do |hv|
    hv.cpus = 2
    hv.maxmemory = 4096
  end

  # enable env
  config.env.enable if Vagrant.has_plugin?('vagrant-env')

  # do manual 'vagrant vbguest --do install'
  config.vbguest.auto_update = false if Vagrant.has_plugin?('vagrant-vbguest')

  config.timezone.value = 'Asia/Tokyo' if Vagrant.has_plugin?('vagrant-timezone')

  proxy = get_proxy

  if Vagrant.has_plugin?('vagrant-proxyconf')
    if proxy
      # cannot write snap npm, so disable
      config.proxy.enabled = {npm: false}
      %i[http https ftp].each do |name|
        config.proxy.__send__("#{name}=", proxy[name]) if proxy[name]
      end
      config.proxy.no_proxy = proxy[:no_proxy] if proxy[:no_proxy]
    else
      config.proxy.enabled = false
    end
  end

  config.vm.provision 'fix-dns', type: 'shell', before: :all do |script|
    script.inline = <<-SHELL
      sudo sed -i -e '/nameservers:/d' -e '/addresses:/d' /etc/netplan/01-netcfg.yaml
      sudo netplan generate && sudo netplan apply
      sudo sed -i 's/^[[:alpha:]]/#&/' /etc/systemd/resolved.conf
      sudo systemctl restart systemd-resolved.service
    SHELL
  end

  config.vm.provision 'ansible' do |ansible|
    ansible.playbook = '../../ansible/setup.yml'

    vars = {
      setup: {
        pkgs: [
          'vim',
          'rsync',
          'build-essential',
        ],
      },
      git: {},
      mariadb: {
        dev: true,
      },
      nginx: {},
      nodejs: {
        type: 'apt', # or 'snap' or 'nodesource'
        npms: ['coffeescript'],
      },
      openldap: {},
      reids: {
        dev: true,
      },
      ruby: {
        type: 'apt', # or 'snap' or 'rbenv'
        dev: true,
        pkgs: ['bundler'],
        gems: ['rubocop'],
      },
    }

    vars[:proxy] = proxy if proxy

    vars[:git][:config] = git_config if vars[:git]

    ansible.extra_vars = vars
  end
end
