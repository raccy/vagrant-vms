# nginx + modsecurity + mruby

- set_fact:
    nginx_src: '{{ src_dir }}/nginx-{{ nginx.version }}'
    modsecurity_nginx_src: '{{ src_dir }}/modsecurity-nginx-v{{ modsecurity_nginx.version }}'
    ngx_mruby_src: '{{ src_dir }}/ngx_mruby-{{ ngx_mruby.version }}'
    ngx_devel_kit_src: '{{ src_dir }}/ngx_devel_kit-{{ ngx_devel_kit.version }}'
    mruby_src: '{{ src_dir }}/mruby-{{ mruby.version }}'

- name: nginx get and unarchive
  unarchive:
    remote_src: yes
    src: 'http://nginx.org/download/nginx-{{ nginx.version }}.tar.gz'
    dest: '{{ src_dir }}'
    creates: '{{ nginx_src }}'
  environment: '{{ proxy_env }}'

- name: modsecurity-nginx get and unarchive
  unarchive:
    remote_src: yes
    src: 'https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v{{ modsecurity_nginx.version }}/modsecurity-nginx-v{{ modsecurity_nginx.version }}.tar.gz'
    dest: '{{ src_dir }}'
    creates: '{{ modsecurity_nginx_src }}'
  environment: '{{ proxy_env }}'

- name: ngx_mruy get and unarchive
  unarchive:
    remote_src: yes
    src: 'https://github.com/matsumotory/ngx_mruby/archive/refs/tags/v{{ ngx_mruby.version }}.tar.gz'
    dest: '{{ src_dir }}'
    creates: '{{ ngx_mruby_src }}'
  environment: '{{ proxy_env }}'

- name: ngx_devel_kit get and unarchive
  unarchive:
    remote_src: yes
    src: 'https://github.com/vision5/ngx_devel_kit/archive/refs/tags/v{{ ngx_devel_kit.version }}.tar.gz'
    dest: '{{ src_dir }}'
    creates: '{{ ngx_devel_kit_src }}'
  environment: '{{ proxy_env }}'

- name: mruby get and unarchive
  unarchive:
    remote_src: yes
    src: 'https://github.com/mruby/mruby/archive/refs/tags/{{ mruby.version }}.tar.gz'
    dest: '{{ src_dir }}'
    creates: '{{ mruby_src }}'
  environment: '{{ proxy_env }}'

- name: ngx_mruby run configure
  command:
    argv:
      - ./configure
      - --enable-dynamic-module
      - '--with-mruby-root={{ mruby_src }}'
      - '--with-ndk-root={{ ngx_devel_kit_src }}'
      - '--with-ngx-src-root={{ nginx_src }}'
    chdir: '{{ ngx_mruby_src }}'

# ネットワーク接続必要
- name: ngx_mruby run make build_mruby
  command:
    cmd: make build_mruby
    chdir: '{{ ngx_mruby_src }}'
  environment: '{{ proxy_env }}'

- name: ngx_mruby run make generate_gems_config_dynamic
  command:
    cmd: make generate_gems_config_dynamic
    chdir: '{{ ngx_mruby_src }}'

# https://nginx.org/en/docs/configure.html
- name: nginx run configure
  command:
    argv:
      - ./configure
      # - '--prefix={{ nginx.prefix }}'
      # - --error-log-path=/var/log/nginx-local/error.log
      # - --http-log-path=/var/log/nginx-local/access.log
      - --http-client-body-temp-path={{ nginx.temp_dir }}/client_body
      - --http-proxy-temp-path={{ nginx.temp_dir }}/proxy
      - --http-fastcgi-temp-path={{ nginx.temp_dir }}/fastcgi
      - --http-uwsgi-temp-path={{ nginx.temp_dir }}/uwsgi
      - --http-scgi-temp-path={{ nginx.temp_dir }}/scgi
      - --pid-path={{ nginx.run_dir }}/nginx.pid
      - --lock-path={{ nginx.lock_dir }}/nginx.lock
      - --user={{ nginx.user }}
      - --group={{ nginx.group }}
      - --with-threads
      - --with-file-aio
      - --with-http_ssl_module
      - --with-http_v2_module
      - --with-http_realip_module
      - --with-http_addition_module
      # - --with-http_xslt_module=dynamic
      # - --with-http_image_filter_module=dynamic
      # - --with-http_geoip_module=dynamic
      - --with-http_sub_module
      - --with-http_dav_module
      # - --with-http_flv_module
      # - --with-http_mp4_module
      - --with-http_gunzip_module
      - --with-http_gzip_static_module
      - --with-http_auth_request_module
      # - --with-http_random_index_module
      - --with-http_secure_link_module
      - --with-http_degradation_module
      - --with-http_slice_module
      - --with-http_stub_status_module
      # - --with-http_perl_module=dynamic
      - --with-mail=dynamic
      - --with-mail_ssl_module
      - --with-stream=dynamic
      - --with-stream_ssl_module
      - --with-stream_realip_module
      # - --with-stream_geoip_module=dynamic
      - --with-stream_ssl_preread_module
      # - --with-google_perftools_module
      # - --with-cpp_test_module
      - --with-compat
      - --with-debug
      - '--add-dynamic-module={{ modsecurity_nginx_src }}'
      - '--add-dynamic-module={{ ngx_devel_kit_src }}'
      - '--add-dynamic-module={{ ngx_mruby_src }}'
    chdir: '{{ nginx_src }}'

- name: nginx run make
  command:
    cmd: make
    chdir: '{{ nginx_src }}'

- name: nginx run make install
  command:
    cmd: make install
    chdir: '{{ nginx_src }}'

- name: nginx make directory
  file:
    path: '{{ item }}'
    state: directory
    owner: nginx
    group: root
    mode: '0750'
  loop:
    - /var/lib/nginx-local
    - /var/lib/nginx-local/tmp
    - /var/log/nginx-local

- name: nginx restorecon
  command: 'restorecon -irvF {{ item }}'
  loop:
    - '{{ nginx.prefix }}'
    - /var/lib/nginx-local
    - /var/log/nginx-local
