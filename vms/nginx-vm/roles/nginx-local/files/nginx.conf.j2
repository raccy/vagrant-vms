# nginx.conf for nginx-local

user  {{ nginx.user }}{{ "  " ~ nginx.group if nginx.group is defined and nginx.group != nginx.user else "" }};
worker_processes  auto;
error_log  {{ nginx.logs | default("logs") }}/error.log;
pid  {{ nginx.pid | default("logs/nginx.pid") }};

# Load dynamic modules
load_module  modules/ngx_mail_module.so;
load_module  modules/ngx_stream_module.so;
load_module  modules/ngx_http_modsecurity_module.so;
load_module  modules/ngx_http_geoip2_module.so;
load_module  modules/ndk_http_module.so;
load_module  modules/ngx_http_mruby_module.so; # depends on ndk_http_module

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # geoip2 country
    geoip2 /usr/share/GeoIP/GeoLite2-Country.mmdb {
        $geoip2_country_code  country iso_code;
        $geoip2_country_name  country names en;
    }

    log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" '
                     '$geoip2_country_code "$geoip2_country_name"';

    access_log  {{ nginx.logs | default("logs") }}/access.log  main;

    sendfile           on;
    tcp_nopush         on;
    keepalive_timeout  65;
    server_tokens      off;

    # ssl paramaters
    ssl_protocols              TLSv1.2 TLSv1.3;
    ssl_session_cache          shared:SSL:1m;
    ssl_session_timeout        5m;
    ssl_ciphers                PROFILE=SYSTEM;
    ssl_prefer_server_ciphers  on;

    # add headers always
    add_header  Strict-Transport-Security  "max-age=63072000"  always;
    add_header  X-Frame-Options            "SAMEORIGIN"        always;

    # proxy set headers
    proxy_set_header  Host               $host;
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-Host   $host:$server_port;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Forwarded-Port   $server_port;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto  $scheme;

    include  conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;

        return       301 https://$host$request_uri;
    }

    server {
        listen       443 ssl http2 default_server;
        listen       [::]:443 ssl http2 default_server;
        server_name  _;
        root         {{ nginx.html | default("html") }};

        error_log   {{ nginx.logs | default("logs") }}/ssl_error.log;
        access_log  {{ nginx.logs | default("logs") }}/ssl_access.log  main;

        ssl_certificate      {{ tls_file.cert }};
        ssl_certificate_key  {{ tls_file.key }};

        modsecurity             on;
        modsecurity_rules_file  {{ modsecurity_conf }};

        include default.d/*.conf;
    }
}
